/*
【题目描述】
有n堆纸牌，编号分别为 1，2，…, n。每堆上有若干张，但纸牌总数必为n的倍数。可以在任一堆上取若干张纸牌，然后移动。

移牌规则为：在编号为1的堆上取的纸牌，只能移到编号为 2 的堆上；在编号为 n 的堆上取的纸牌，只能移到编号为n-1的堆上；其他堆上取的纸牌，可以移到相邻左边或右边的堆上。

现在要求找出一种移动方法，用最少的移动次数使每堆上纸牌数都一样多。

例如 n=4，4堆纸牌数分别为：  ①　9　②　8　③　17　④　6

移动3次可达到目的：

从 ③ 取4张牌放到④（9 8 13 10）->从③取3张牌放到 ②（9 11 10 10）-> 从②取1张牌放到①（10 10 10 10）。

【输入】
n（n 堆纸牌，1 ≤ n ≤ 100）

a1 a2 … an （n 堆纸牌，每堆纸牌初始数，l≤ ai ≤10000）。

【输出】
所有堆均达到相等时的最少移动次数。

【输入样例】
4
9 8 17 6
【输出样例】
3
*/
#include <iostream>
using namespace std;

const int N = 110;
int n, a[N], ave = 0, num = 0;

int main()
{
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
		ave += a[i];
	}
	ave /= n;	
		
	for (int i = 0; i < n - 1; i++)
	{
		if (ave == a[i])
			continue;
		a[i+1] += a[i] - ave;
		num++;
	}
	
	cout << num << endl;
	return 0;
}
