/*
【题目描述】
会下国际象棋的人都很清楚：皇后可以在横、竖、斜线上不限步数地吃掉其他棋子。如何将8个皇后放在棋盘上（有8 × 8个方格），使它们谁也不能被吃掉！这就是著名的八皇后问题。

对于某个满足要求的8皇后的摆放方法，定义一个皇后串a与之对应，即a=b1b2...b8，其中bi为相应摆法中第i行皇后所处的列数。已经知道8皇后问题一共有92组解（即92个不同的皇后串）。

给出一个数b，要求输出第b个串。串的比较是这样的：皇后串x置于皇后串y之前，当且仅当将x视为整数时比y小。

【输入】
第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数b(1≤b≤92)。

【输出】
输出有n行，每行输出对应一个输入。输出应是一个正整数，是对应于b的皇后串。

【输入样例】
2
1
92
【输出样例】
15863724
84136275
*/
#include <iostream>
using namespace std;

int a[100] = {0}, d[100]={0}, b[100]={0}, c[100]={0}, n, s, num = 0;

int solve(int i)
{
	if (i > 8)
	{
		num++;
		if (num == s)
		{
			for (int m = 1; m <= 8; m++)
			cout << a[m];
			cout << endl;
		}
		
		return 0; 
	}
	
	for (int j = 1; j <= 8; j++)
	{
		if (!b[j] && !c[i+j] && !d[i-j+7] && num < s)
		{
			a[i] = j;
			b[j] = 1;		// 列 |
			c[i+j] = 1;		// 斜线 / 
			d[i-j+7] = 1; 	// 斜线 \ 
			
			solve(i+1);
			
			b[j] = 0;	
			c[i+j] = 0;
			d[i-j+7] = 0;
		}
	}
	return 0;
}

int main()
{
	while (cin >> n)
	{
		for (int i = 0; i < n; i++)
		{
			num = 0;
			cin >> s;
			solve(1);
		}
	}
	return 0;
}
